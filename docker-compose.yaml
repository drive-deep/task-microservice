services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres-coordinator:
        condition: service_healthy
      postgres-worker1:
        condition: service_started
      postgres-worker2:
        condition: service_started
      redis:
        condition: service_started
      kafka:
        condition: service_started
    env_file:
      - .env
    environment:
      - DATABASE_HOST=${POSTGRES_HOST}
      - DATABASE_PORT=${POSTGRES_PORT}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      - KAFKA_BROKER=${KAFKA_BROKER}
    container_name: task-microservice-app

  postgres-coordinator:
    image: citusdata/citus:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_coordinator_data:/var/lib/postgresql/data
      - ./init-citus.sh:/docker-entrypoint-initdb.d/init-citus.sh
    container_name: postgres-coordinator
    command: ["postgres", "-c", "shared_preload_libraries=citus"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-worker1:
    image: citusdata/citus:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_worker1_data:/var/lib/postgresql/data
    container_name: postgres-worker1
    command: ["postgres", "-c", "shared_preload_libraries=citus"]

  postgres-worker2:
    image: citusdata/citus:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5434:5432"
    volumes:
      - postgres_worker2_data:/var/lib/postgresql/data
    container_name: postgres-worker2
    command: ["postgres", "-c", "shared_preload_libraries=citus"]

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    container_name: redis

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    container_name: zookeeper

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: kafka

volumes:
  postgres_coordinator_data:
  postgres_worker1_data:
  postgres_worker2_data:
  redis_data: