services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres-coordinator
      - postgres-worker1
      - postgres-worker2
      - redis
      - kafka
    environment:
      - DATABASE_HOST=postgres-coordinator
      - DATABASE_PORT=5432
      - DATABASE_USER=task_user
      - DATABASE_PASSWORD=task_password
      - DATABASE_NAME=task_db
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - KAFKA_BROKER=kafka:9092
    container_name: task-microservice-app

  postgres-coordinator:
    image: citusdata/citus:10.2
    environment:
      POSTGRES_USER: task_user
      POSTGRES_PASSWORD: task_password
      POSTGRES_DB: task_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_coordinator_data:/var/lib/postgresql/data
    container_name: postgres-coordinator

  postgres-worker1:
    image: citusdata/citus:10.2
    environment:
      POSTGRES_USER: task_user
      POSTGRES_PASSWORD: task_password
      POSTGRES_DB: task_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_worker1_data:/var/lib/postgresql/data
    container_name: postgres-worker1

  postgres-worker2:
    image: citusdata/citus:10.2
    environment:
      POSTGRES_USER: task_user
      POSTGRES_PASSWORD: task_password
      POSTGRES_DB: task_db
    ports:
      - "5434:5432"
    volumes:
      - postgres_worker2_data:/var/lib/postgresql/data
    container_name: postgres-worker2

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    container_name: redis

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    container_name: zookeeper

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: kafka

volumes:
  postgres_coordinator_data:
  postgres_worker1_data:
  postgres_worker2_data:
  redis_data: